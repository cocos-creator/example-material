{"version":3,"sources":["file:///D:/material-examples/show-material/assets/scripts/skill-effect/self-destory.ts"],"names":["_decorator","Component","ccclass","property","SelfDestory","start","setTimeout","node","destroy","console","log"],"mappings":";;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;6BAGjBI,W,WADZF,OAAO,CAAC,aAAD,C,gBAAR,MACaE,WADb,SACiCH,SADjC,CAC2C;AACvC;AACA;;AAEA;AACA;AACA;AAEOI,QAAAA,KAAK,GAAI;AACZC,UAAAA,UAAU,CAAC,MAAM;AACb,gBAAI,KAAKC,IAAL,IAAa,KAAKA,IAAL,CAAUC,OAAV,EAAjB,EAAqC;AACjCC,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ,WAJS,EAIP,IAJO,CAAV;AAKH,SAdsC,CAgBvC;AACA;AACA;;;AAlBuC,O","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SelfDestory')\r\nexport class SelfDestory extends Component {\r\n    /* class member could be defined like this */\r\n    // dummy = '';\r\n\r\n    /* use `property` decorator if your want the member to be serializable */\r\n    // @property\r\n    // serializableDummy = 0;\r\n\r\n    public start () {\r\n        setTimeout(() => {\r\n            if (this.node && this.node.destroy()){\r\n                console.log('destroy complete');\r\n            }\r\n        }, 5000);\r\n    }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // Your update function goes here.\r\n    // }\r\n}\r\n"]}