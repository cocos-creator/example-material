{"version":3,"sources":["file:///D:/material-examples/show-material/assets/scripts/physics/ground.ts"],"names":["_decorator","Component","Node","ccclass","property","sineLerp","b","e","t","Math","sin","PI","PhysicsGround","update","deltaTime","_autoSpin","_time","min","spinInterval","spinDuration","back","floor","_angle","node","setRotationFromEuler","toggleSpin","isChecked","manualSpinSliderNode","active","setAngle","progress"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;;;;;;OAC1B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;AAExBK,MAAAA,Q,GAAW,CAACC,CAAD,EAAYC,CAAZ,EAAuBC,CAAvB,KAAqC;AAClD,eAAOF,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAL,KAAWG,IAAI,CAACC,GAAL,CAAS,CAACF,CAAC,GAAG,GAAL,IAAYC,IAAI,CAACE,EAA1B,IAAgC,CAA3C,IAAgD,GAA3D;AACH,O;;+BAGYC,a,WADZT,OAAO,CAAC,eAAD,C,UAQHC,QAAQ,CAACF,IAAD,C,oCARb,MACaU,aADb,SACmCX,SADnC,CAC6C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,yCAU1B,CAV0B;;AAAA,0CAWzB,CAXyB;;AAAA,6CAYtB,IAZsB;AAAA;;AAclCY,QAAAA,MAAM,CAAEC,SAAF,EAAqB;AAAE;AAChC,cAAI,KAAKC,SAAT,EAAoB;AAChB,iBAAKC,KAAL,IAAcF,SAAd;AACA,kBAAMN,CAAC,GAAGC,IAAI,CAACQ,GAAL,CAAS,KAAKC,YAAL,GAAqB,KAAKF,KAAL,GAAa,KAAKE,YAAhD,EAA+D,KAAKC,YAApE,CAAV;AACA,kBAAMC,IAAI,GAAGX,IAAI,CAACY,KAAL,CAAW,KAAKL,KAAL,GAAa,KAAKE,YAA7B,IAA6C,CAA1D;AACA,iBAAKI,MAAL,GAAcjB,QAAQ,CAACe,IAAI,GAAG,CAAH,GAAO,GAAZ,EAAiBA,IAAI,GAAG,GAAH,GAAS,CAA9B,EAAiCZ,CAAC,GAAG,KAAKW,YAA1C,CAAtB;AACH;;AACD,eAAKI,IAAL,CAAUC,oBAAV,CAA+B,CAA/B,EAAkC,CAAlC,EAAqC,KAAKF,MAA1C;AACH,SAtBwC,CAwBzC;;;AACOG,QAAAA,UAAU,CAAElB,CAAF,EAAsB;AACnC,eAAKQ,SAAL,GAAiBR,CAAC,CAACmB,SAAnB;AACA,eAAKC,oBAAL,CAA0BC,MAA1B,GAAmC,CAACrB,CAAC,CAACmB,SAAtC;AACH,SA5BwC,CA8BzC;;;AACOG,QAAAA,QAAQ,CAAEtB,CAAF,EAAsB;AACjC,eAAKe,MAAL,GAAc,CAAC,MAAMf,CAAC,CAACuB,QAAT,IAAqB,GAAnC;AACH;;AAjCwC,O,uFAExC1B,Q;;;;;iBACqB,C;;uFACrBA,Q;;;;;iBACqB,E;;;;;;;iBAGQ,I","sourcesContent":["\r\nimport { _decorator, Component, Node, SliderComponent, ToggleComponent } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst sineLerp = (b: number, e: number, t: number) => {\r\n    return b + (e - b) * (Math.sin((t - 0.5) * Math.PI) + 1) * 0.5;\r\n};\r\n\r\n@ccclass('PhysicsGround')\r\nexport class PhysicsGround extends Component {\r\n\r\n    @property\r\n    public spinDuration = 5;\r\n    @property\r\n    public spinInterval = 20;\r\n\r\n    @property(Node)\r\n    public manualSpinSliderNode = null;\r\n\r\n    public _time = 0;\r\n    public _angle = 0;\r\n    public _autoSpin = true;\r\n\r\n    public update (deltaTime: number) { // spin once in a while\r\n        if (this._autoSpin) {\r\n            this._time += deltaTime;\r\n            const t = Math.min(this.spinInterval - (this._time % this.spinInterval), this.spinDuration);\r\n            const back = Math.floor(this._time / this.spinInterval) % 2;\r\n            this._angle = sineLerp(back ? 0 : 180, back ? 180 : 0, t / this.spinDuration);\r\n        }\r\n        this.node.setRotationFromEuler(0, 0, this._angle);\r\n    }\r\n\r\n    // toggle callback\r\n    public toggleSpin (e: ToggleComponent) {\r\n        this._autoSpin = e.isChecked;\r\n        this.manualSpinSliderNode.active = !e.isChecked;\r\n    }\r\n\r\n    // slider callback\r\n    public setAngle (e: SliderComponent) {\r\n        this._angle = (0.5 - e.progress) * 180;\r\n    }\r\n}\r\n"]}