// Effect Syntax Guide: https://github.com/cocos-creator/docs-3d/blob/master/zh/material-system/effect-syntax.md

CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: general-vs:vert # builtin header
      frag: unlit-fs:frag
      properties: &props
        mainTexture:    { value: white }
        mainColor:      { value: [1, 1, 1, 1], editor: { type: color } }
        blurColor:        { value: [1, 1, 1, 1] } 
  - name: transparent
    passes:
    - vert: general-vs:vert # builtin header
      frag: unlit-fs:frag
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendSrcAlpha: src_alpha
          blendDstAlpha: one_minus_src_alpha
      properties: *props
}%

CCProgram unlit-fs %{
  precision highp float;
  #include <output>
  #include <cc-fog-fs>


  in vec2 v_uv;
  uniform sampler2D mainTexture; 

  uniform Constant {
    vec4 mainColor;
    vec4 blurColor;
    
  };

  vec4 frag () {
   
    vec2 pixelSize;

    pixelSize.x = 1.0/blurColor.x;
    pixelSize.y = 1.0/blurColor.y;

  float pixW = pixelSize.x, pixH = pixelSize.y;

  
  vec2 vTexcoord = v_uv;

   float weight3[7];
    weight3[0] = 0.0;
    weight3[1] = 0.0;
    weight3[2] = 1.0;
    weight3[3] = 2.0;
    weight3[4] = 1.0;
    weight3[5] = 0.0;
    weight3[6] = 0.0;   



   float weight2[7];
    weight2[0] = 0.0;
    weight2[1] = 3.0;
    weight2[2] = 13.0;
    weight2[3] = 22.0;
    weight2[4] = 13.0;
    weight2[5] = 3.0;
    weight2[6] = 0.0;

   float weight1[7];
    weight1[0] = 1.0;
    weight1[1] = 13.0;
    weight1[2] = 59.0;
    weight1[3] = 97.0;
    weight1[4] = 59.0;
    weight1[5] = 13.0;
    weight1[6] = 1.0;

   float weight0[7];
    weight0[0] = 2.0;
    weight0[1] = 22.0;
    weight0[2] = 97.0;
    weight0[3] = 159.0;
    weight0[4] = 97.0;
    weight0[5] = 22.0;
    weight0[6] = 2.0;

  
  
  vec4 sum = mainColor * texture(mainTexture, vTexcoord);
  
  #if gaussian

    sum = mainColor * texture(mainTexture, vTexcoord) * 0.0;
float weightsum = 0.0;
    for (int j = -3;j <= 3; j++ ){
       
            sum += texture(mainTexture, vTexcoord + vec2(pixW * float(-3), pixH * float(j))) * weight3[j+3];
            sum += texture(mainTexture, vTexcoord + vec2(pixW * float(-2), pixH * float(j))) * weight2[j+3];
            sum += texture(mainTexture, vTexcoord + vec2(pixW * float(-1), pixH * float(j))) * weight1[j+3];
            sum += texture(mainTexture, vTexcoord + vec2(pixW * float(0), pixH * float(j))) * weight0[j+3];
            sum += texture(mainTexture, vTexcoord + vec2(pixW * float(1), pixH * float(j))) * weight1[j+3];
            sum += texture(mainTexture, vTexcoord + vec2(pixW * float(2), pixH * float(j))) * weight2[j+3];
            sum += texture(mainTexture, vTexcoord + vec2(pixW * float(3), pixH * float(j))) * weight3[j+3];
        
        weightsum += weight3[j+3];
        weightsum += weight2[j+3];
        weightsum += weight1[j+3];
        weightsum += weight0[j+3];
        weightsum += weight1[j+3];
        weightsum += weight2[j+3];
        weightsum += weight3[j+3];
    }


    sum /= weightsum;
  
  #endif

  

    CC_APPLY_FOG(sum);
    return CCFragOutput(sum);       






  }
}%
