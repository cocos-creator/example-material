{"version":3,"sources":["file:///D:/material-examples/show-material/assets/scripts/skill-effect/BladeStorm.ts"],"names":["_decorator","Component","instantiate","Node","Prefab","ccclass","property","SkilType","Fight","explo","effect","setWorldPosition","SELF","BladeStorm","fire","enabled","new_one","setParent","node","parent","point1","Point","getWorldPosition","point2","point3","ring","point4","point5"],"mappings":"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","sourcesContent":["import { _decorator, Component, instantiate, Node, Prefab } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nenum SkilType {\r\n    SELF,\r\n    ENEMY,\r\n}\r\nclass Fight {\r\n    @property\r\n    public type: SkilType = SkilType.SELF;\r\n    @property(Prefab)\r\n    public effect: Prefab = null;\r\n\r\n    public explo () {\r\n        const effect = instantiate(this.effect) as Node;\r\n        effect.setWorldPosition(0, 0, 0);\r\n    }\r\n}\r\n\r\n@ccclass('BladeStorm')\r\nexport class BladeStorm extends Component {\r\n    /* class member could be defined like this */\r\n    // dummy = '';\r\n\r\n    /* use `property` decorator if your want the member to be serializable */\r\n    // @property\r\n    // serializableDummy = 0;\r\n    // @property(ModelComponent)\r\n    // model: ModelComponent = null;\r\n    @property([Prefab])\r\n    public effect: Prefab[] = [];\r\n    // @property([Socket])\r\n    // Point: Socket[] = [];\r\n    @property([Node])\r\n    public Point: Node[] = [];\r\n    // @property(Prefab)\r\n    // new_one: Prefab = null;\r\n    // @property(fight)\r\n    // fight1: fight=null;\r\n    /*get bbb(){\r\n        return this._aaa;\r\n    }\r\n\r\n    set bbb (value){\r\n        this._aaa = value;\r\n\r\n    }\r\n\r\n    _aaa = '';*/\r\n\r\n    public fire (){\r\n        // console.log('comming');\r\n        if (!this.enabled){\r\n             return;\r\n        }\r\n        const new_one = instantiate(this.effect[0]) as Node;\r\n        new_one.setParent(this.node.parent as Node);\r\n        new_one.setWorldPosition(1, 7, 20);\r\n        // const self_blade = instantiate(this.effect[6]) as Node;\r\n        // self_blade.setParent(this.node.parent);\r\n        // self_blade.setWorldPosition(1,2,3);\r\n        const point1 = instantiate(this.effect[2]) as Node;\r\n        point1.setParent(this.Point[0]);\r\n        point1.setWorldPosition(this.Point[0].getWorldPosition());\r\n        const point2 = instantiate(this.effect[1]) as Node;\r\n        point2.setParent(this.Point[1]);\r\n        point2.setWorldPosition(this.Point[1].getWorldPosition());\r\n        const point3 = instantiate(this.effect[2]) as Node;\r\n        point3.setParent(this.Point[2]);\r\n        point3.setWorldPosition(this.Point[2].getWorldPosition());\r\n        // const CFD = instantiate(this.effect[3]) as Node;\r\n        // CFD.setParent(this.node.parent);\r\n        // CFD.setWorldPosition(CFD.getPosition(this.Point[0]));\r\n    }\r\n\r\n    public ring (){\r\n        if (!this.enabled){\r\n            return;\r\n       }\r\n        const point4 = instantiate(this.effect[3]) as Node;\r\n        point4.setParent(this.node.parent as Node);\r\n        point4.setWorldPosition(1, 2, 4.5);\r\n        const point5 = instantiate(this.effect[4]) as Node;\r\n        point5.setParent(this.node.parent as Node);\r\n        point5.setWorldPosition(1, 2, 4.5);\r\n\r\n        /*setTimeout(() => {\r\n            this.node\r\n        }, 1000);  */\r\n    }\r\n\r\n    /*heal(){\r\n        //console.log('comming');\r\n        const new_one = instantiate(this.effect[2]) as Node;\r\n        new_one.setParent(this.node.parent);\r\n        new_one.setWorldPosition(1,2,3);\r\n    }*/\r\n\r\n    // update (deltaTime: number) {\r\n    //     // Your update function goes here.\r\n    // }\r\n}\r\n"]}