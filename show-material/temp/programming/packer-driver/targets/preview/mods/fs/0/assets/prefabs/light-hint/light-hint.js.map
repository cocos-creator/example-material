{"version":3,"sources":["file:///D:/material-examples/show-material/assets/prefabs/light-hint/light-hint.ts"],"names":["_decorator","Component","CameraComponent","ModelComponent","SpotLightComponent","SphereLightComponent","Vec2","ccclass","LightHint","start","light","node","parent","getComponent","_material","material","_camera","scene","getComponentInChildren","size","setWorldScale","setProperty","color","luminance","update","setWorldRotation","worldRotation"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,e,OAAAA,e;AAA2BC,MAAAA,c,OAAAA,c;AAAgBC,MAAAA,kB,OAAAA,kB;AAAoBC,MAAAA,oB,OAAAA,oB;AAAsBC,MAAAA,I,OAAAA,I;;;;;;;AAC7GC,MAAAA,O,GAAYP,U,CAAZO,O;;2BAGKC,S,WADZD,OAAO,CAAC,WAAD,C;;;;;;;;;;;;sEAG0B,I;;oEACK,I;;;;;;;eAEnCE,K,GAAA,iBAAS;AACL,cAAIC,KAAgD,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,YAAjB,CAA8BR,oBAA9B,CAAvD;AACA,cAAI,CAACK,KAAL,EAAYA,KAAK,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,YAAjB,CAA8BT,kBAA9B,CAAR;AACZ,eAAKU,SAAL,GAAiB,KAAKH,IAAL,CAAUE,YAAV,CAAuBV,cAAvB,EAAuCY,QAAxD;AACA,eAAKC,OAAL,GAAe,KAAKL,IAAL,CAAUM,KAAV,CAAgBC,sBAAhB,CAAuChB,eAAvC,CAAf;AACA,cAAMiB,IAAI,GAAGT,KAAK,CAACS,IAAN,GAAa,CAA1B;AACA,eAAKR,IAAL,CAAUS,aAAV,CAAwBD,IAAxB,EAA8BA,IAA9B,EAAoCA,IAApC;;AACA,eAAKL,SAAL,CAAeO,WAAf,CAA2B,OAA3B,EAAoCX,KAAK,CAACY,KAA1C;;AACA,eAAKR,SAAL,CAAeO,WAAf,CAA2B,eAA3B,EAA4C,IAAIf,IAAJ,CAASI,KAAK,CAACa,SAAf,EAA0B,GAA1B,CAA5C;AACH,S;;eAEDC,M,GAAA,kBAAU;AACN,eAAKb,IAAL,CAAUc,gBAAV,CAA2B,KAAKT,OAAL,CAAaL,IAAb,CAAkBe,aAA7C;AACH,S;;;QAlB0BzB,S","sourcesContent":["import { _decorator, Component, CameraComponent, Material, ModelComponent, SpotLightComponent, SphereLightComponent, Vec2 } from \"cc\";\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass(\"LightHint\")\r\nexport class LightHint extends Component {\r\n\r\n    private _material: Material = null;\r\n    private _camera: CameraComponent = null;\r\n\r\n    start () {\r\n        let light: SphereLightComponent | SpotLightComponent = this.node.parent.getComponent(SphereLightComponent);\r\n        if (!light) light = this.node.parent.getComponent(SpotLightComponent);\r\n        this._material = this.node.getComponent(ModelComponent).material;\r\n        this._camera = this.node.scene.getComponentInChildren(CameraComponent);\r\n        const size = light.size * 4;\r\n        this.node.setWorldScale(size, size, size);\r\n        this._material.setProperty('color', light.color);\r\n        this._material.setProperty('intensitySize', new Vec2(light.luminance, 0.4));\r\n    }\r\n\r\n    update () {\r\n        this.node.setWorldRotation(this._camera.node.worldRotation);\r\n    }\r\n}\r\n"]}