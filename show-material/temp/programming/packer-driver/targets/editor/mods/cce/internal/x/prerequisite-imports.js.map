{"version":3,"sources":["cce:/internal/x/prerequisite-imports"],"names":["requests","request","_err"],"mappings":";;;;;;AACA;AAEA,YAAM,CAAC,YAAY;AACf,cAAMA,QAAQ,GAAG,CAAC,sBAAa,qEAAb,CAAD,EAAsF,sBAAa,gFAAb,CAAtF,EAAsL,sBAAa,8EAAb,CAAtL,EAAoR,sBAAa,wFAAb,CAApR,EAA4X,sBAAa,4EAAb,CAA5X,EAAwd,sBAAa,6EAAb,CAAxd,EAAqjB,sBAAa,qFAAb,CAArjB,EAA0pB,sBAAa,0EAAb,CAA1pB,EAAovB,sBAAa,0FAAb,CAApvB,EAA81B,sBAAa,8FAAb,CAA91B,EAA48B,sBAAa,mFAAb,CAA58B,EAA+iC,sBAAa,kFAAb,CAA/iC,EAAipC,sBAAa,kFAAb,CAAjpC,EAAmvC,sBAAa,8EAAb,CAAnvC,EAAi1C,sBAAa,6EAAb,CAAj1C,EAA86C,sBAAa,8FAAb,CAA96C,EAA4hD,sBAAa,uFAAb,CAA5hD,EAAmoD,sBAAa,+EAAb,CAAnoD,EAAkuD,sBAAa,6EAAb,CAAluD,EAA+zD,sBAAa,sFAAb,CAA/zD,EAAq6D,sBAAa,qFAAb,CAAr6D,EAA0gE,sBAAa,wFAAb,CAA1gE,EAAknE,sBAAa,uEAAb,CAAlnE,EAAysE,sBAAa,kFAAb,CAAzsE,EAA2yE,sBAAa,yEAAb,CAA3yE,EAAo4E,sBAAa,iFAAb,CAAp4E,EAAq+E,sBAAa,kFAAb,CAAr+E,EAAukF,sBAAa,gFAAb,CAAvkF,EAAuqF,sBAAa,iFAAb,CAAvqF,EAAwwF,sBAAa,yEAAb,CAAxwF,CAAjB;;AACA,aAAK,MAAMC,OAAX,IAAsBD,QAAtB,EAAgC;AAC5B,cAAI;AACA,kBAAMC,OAAO,EAAb;AACH,WAFD,CAEE,OAAOC,IAAP,EAAa,CACX;AACH;AACJ;AACJ,OATK,GAAN","sourcesContent":["\n// Auto generated represents the prerequisite imports of project modules.\n\nawait (async () => {\n    const requests = [() => import('file:///D:/material-examples/show-material/assets/migrate-canvas.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/ad-hoc/debug-info.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/ad-hoc/exposure.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/ad-hoc/instanced-skinning.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/ad-hoc/sponza.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/ad-hoc/toggler.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/audio/audio-controller.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/audio/audio.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/collision-detection/emitter.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/collision-detection/engine-info.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/custom-effect/tunnel.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/first-person-camera.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/jellyfish/jellyfish.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/jellyfish/spawn.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/pbr/geometries.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/physics-checker/PhysicsEnvCheck.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/physics/collider-manager.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/physics/collider.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/physics/ground.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/skill-effect/BladeStorm.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/skill-effect/healspell.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/skill-effect/self-destory.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/skin/SSS.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/skin/label-modifier.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/skin/rotor.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/tangent-visualizer.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/testlist/backbutton.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/testlist/listitem.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/testlist/scenelist.ts'), () => import('file:///D:/material-examples/show-material/assets/scripts/unlit-quad.ts')];\n    for (const request of requests) {\n        try {\n            await request();\n        } catch (_err) {\n            // The error should have been caught by executor.\n        }\n    }\n})();\n    "]}