{"version":3,"sources":["file:///D:/material-examples/show-material/assets/scripts/audio/audio.ts"],"names":["_decorator","AudioSourceComponent","Component","Director","director","Node","ccclass","property","Audio","onLoad","source","node1","getComponent","source2","node2","t1","off2","t2","startTime1","startTime2","sineLerp","b","e","t","Math","sin","PI","animation1","volume","performance","now","animation2","clip","once","s2","on","EVENT_BEFORE_UPDATE","setTimeout","off","play","onDisable","stop"],"mappings":"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","sourcesContent":["// @ts-check\r\n\r\nimport { _decorator, AudioSourceComponent, Component, Director, director, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('audio')\r\nexport class Audio extends Component {\r\n\r\n    @property(Node)\r\n    public node1: Node = null;\r\n\r\n    @property(Node)\r\n    public node2: Node = null;\r\n\r\n    public onLoad () {\r\n        const source = this.node1.getComponent(AudioSourceComponent);\r\n        const source2 = this.node2.getComponent(AudioSourceComponent);\r\n\r\n        const t1 = 17; const off2 = 5; const t2 = 15;\r\n        /* discrete callbacks *\r\n        source.clip.once('started', () => {\r\n            setTimeout(function(){ source.volume = 0.55; }, t1 * 500);\r\n            setTimeout(function(){ source.volume = 0.1; }, t1 * 1000);\r\n\r\n            setTimeout(function(){ source2.play(); }, off2 * 1000);\r\n            setTimeout(function(){ source2.volume = 0.75; }, (off2 + t2 * 0.5) * 1000);\r\n            setTimeout(function(){ source2.volume = 1; }, (off2 + t2) * 1000);\r\n        });\r\n        /* smooth transition */\r\n        let startTime1: number; let startTime2: number;\r\n        const sineLerp = (b: number, e: number, t: number) => {\r\n            return b + (e - b) * (Math.sin((t - 0.5) * Math.PI) + 1) * 0.5;\r\n        };\r\n        const animation1 = () => {\r\n            source.volume = sineLerp(1, 0.1, (performance.now() - startTime1) / (t1 * 1000));\r\n        };\r\n        const animation2 = () => {\r\n            source2.volume = sineLerp(0.5, 1, (performance.now() - startTime2) / (t2 * 1000));\r\n        };\r\n        source.clip.once('started', () => {\r\n            // animate audio 1\r\n            const s2 = source2;\r\n            startTime1 = performance.now();\r\n            director.on(Director.EVENT_BEFORE_UPDATE, animation1);\r\n            setTimeout(() => {\r\n                director.off(Director.EVENT_BEFORE_UPDATE, animation1);\r\n            }, t1 * 1000);\r\n            // animate audio 2\r\n            setTimeout(() => {\r\n                s2.play();\r\n                startTime2 = performance.now();\r\n                director.on(Director.EVENT_BEFORE_UPDATE, animation2);\r\n            }, off2 * 1000);\r\n            setTimeout(() => {\r\n                director.off(Director.EVENT_BEFORE_UPDATE, animation2);\r\n            }, (off2 + t2) * 1000);\r\n        });\r\n        /**/\r\n    }\r\n\r\n    public onDisable () {\r\n        this.node1.getComponent(AudioSourceComponent).stop();\r\n        this.node2.getComponent(AudioSourceComponent).stop();\r\n    }\r\n}\r\n"]}