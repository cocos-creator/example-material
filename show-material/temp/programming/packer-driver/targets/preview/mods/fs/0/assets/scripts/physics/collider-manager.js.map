{"version":3,"sources":["file:///D:/material-examples/show-material/assets/scripts/physics/collider-manager.ts"],"names":["_decorator","Component","instantiate","Node","Vec3","math","ccclass","property","v3_1","ColliderManager","type","start","tipsNode","active","window","CC_PHYSICS_BUILTIN","node","removeAllChildren","i","count","prefabs","Math","round","random","parent","setPosition","randomRange","setRotationFromEuler","update","children","getPosition","y","x","boundHalfLength","z"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, instantiate, Node, Vec3 } from 'cc';\r\nimport { math } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst v3_1 = new Vec3();\r\n\r\n@ccclass('ColliderManager')\r\nexport class ColliderManager extends Component {\r\n\r\n    @property\r\n    public count = 200;\r\n\r\n    @property\r\n    public boundHalfLength = 12.5;\r\n\r\n    @property([Node])\r\n    public prefabs = [];\r\n\r\n    @property({type: Node})\r\n    public tipsNode = null;\r\n\r\n    public start () {\r\n        this.tipsNode.active = window.CC_PHYSICS_BUILTIN;\r\n\r\n        this.node.removeAllChildren();\r\n        for (let i = 0; i < this.count; i++) {\r\n            const node = instantiate(this.prefabs[Math.round(Math.random())]);\r\n            node.parent = this.node;\r\n            node.setPosition(math.randomRange(-2, 2), 3 + i * 2, math.randomRange(-2, 2));\r\n            node.setRotationFromEuler(math.randomRange(0, 180), math.randomRange(0, 180), math.randomRange(0, 180));\r\n        }\r\n    }\r\n\r\n    public update () {\r\n        // handle bounds\r\n        for (const node of this.node.children) {\r\n            node.getPosition(v3_1);\r\n            if      (v3_1.y <                       -10) { v3_1.y =  30; }\r\n            else if (v3_1.x >  (this.boundHalfLength + 3)) { v3_1.x = -(this.boundHalfLength - 3); }\r\n            else if (v3_1.x < -(this.boundHalfLength + 3)) { v3_1.x =  (this.boundHalfLength - 3); }\r\n            else if (v3_1.z >  (this.boundHalfLength + 3)) { v3_1.z = -(this.boundHalfLength - 3); }\r\n            else if (v3_1.z < -(this.boundHalfLength + 3)) { v3_1.z =  (this.boundHalfLength - 3); }\r\n            node.setPosition(v3_1);\r\n        }\r\n    }\r\n}\r\n"]}