{"version":3,"sources":["file:///D:/material-examples/show-material/assets/scripts/unlit-quad.ts"],"names":["_decorator","builtinResMgr","gfx","Material","ModelComponent","SpriteFrame","Texture2D","utils","Vec3","ccclass","property","mesh","vbInfo","vbuffer","material","materialInfo","effectName","technique","defines","USE_TEXTURE","states","rasterizerState","cullMode","CullMode","NONE","default_uvs","meshInfo","positions","uvs","indices","minPos","maxPos","enableBlend","blendState","targets","blend","blendSrc","BlendFactor","SRC_ALPHA","blendDst","ONE_MINUS_SRC_ALPHA","blendDstAlpha","UnlitQuadComponent","override","visible","type","onLoad","initialize","createMesh","struct","vertexBundles","view","data","buffer","slice","offset","length","_mesh","updateTexture","transparent","_transparent","pass","passes","binding","getBinding","target","_sprite","_texture","get","bindTexture","getGFXTexture","model","subModels","ia","inputAssembler","uv","_calculateUV","format","Format","UNKNOWN","attributes","a","name","AttributeName","ATTR_TEX_COORD","FormatInfos","size","vb","vertexBuffers","writeBuffer","DataView","stride","update","sharedMaterials","val","overridePipelineStates"],"mappings":"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","sourcesContent":["import {\r\n    _decorator, builtinResMgr, gfx, Material, ModelComponent,\r\n    SpriteFrame, Texture2D, utils, Vec3, Mesh,\r\n} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nlet mesh: Mesh | null = null;\r\nlet vbInfo: Mesh.IBufferView | null = null;\r\nlet vbuffer: ArrayBuffer | null = null;\r\nlet material: Material | null = null;\r\n\r\nconst materialInfo = {\r\n    effectName: 'unlit',\r\n    technique: 0,\r\n    defines: { USE_TEXTURE: true },\r\n    states: { rasterizerState: { cullMode: gfx.CullMode.NONE } },\r\n};\r\nconst default_uvs = [\r\n    0, 1,\r\n    1, 1,\r\n    0, 0,\r\n    1, 0,\r\n];\r\nconst meshInfo = {\r\n    positions: [\r\n        -0.5, -0.5, 0, // bottom-left\r\n        0.5, -0.5, 0, // bottom-right\r\n        -0.5,  0.5, 0, // top-left\r\n        0.5,  0.5, 0, // top-right\r\n    ],\r\n    uvs: default_uvs,\r\n    indices: [ 0, 1, 2, 2, 1, 3 ],\r\n    minPos: new Vec3(-0.5, -0.5, 0),\r\n    maxPos: new Vec3( 0.5,  0.5, 0),\r\n};\r\nconst enableBlend = {\r\n    blendState: { targets: [ {\r\n        blend: true,\r\n        blendSrc: gfx.BlendFactor.SRC_ALPHA,\r\n        blendDst: gfx.BlendFactor.ONE_MINUS_SRC_ALPHA,\r\n        blendDstAlpha: gfx.BlendFactor.ONE_MINUS_SRC_ALPHA,\r\n    } ] },\r\n};\r\n\r\n@ccclass('UnlitQuadComponent')\r\nexport class UnlitQuadComponent extends ModelComponent {\r\n\r\n    @property(SpriteFrame)\r\n    public _sprite: SpriteFrame | null = null;\r\n\r\n    @property(Texture2D)\r\n    public _texture: Texture2D | null = null;\r\n\r\n    @property({ override: true, visible: false })\r\n    set sharedMaterials (val) {\r\n        super.sharedMaterials = val;\r\n    }\r\n    get sharedMaterials () {\r\n        return super.sharedMaterials;\r\n    }\r\n\r\n    @property({ override: true, visible: false })\r\n    set mesh (val) {\r\n        super.mesh = val;\r\n    }\r\n    get mesh () {\r\n        return super.mesh;\r\n    }\r\n\r\n    @property({ type: Texture2D })\r\n    set texture (val) {\r\n        this._texture = val;\r\n        this.updateTexture();\r\n    }\r\n    get texture () {\r\n        return this._texture;\r\n    }\r\n\r\n    @property({ type: SpriteFrame })\r\n    set spriteFrame (val) {\r\n        this._sprite = val;\r\n        this.updateTexture();\r\n    }\r\n    get spriteFrame () {\r\n        return this._sprite;\r\n    }\r\n\r\n    @property\r\n    public _transparent = false;\r\n\r\n    @property\r\n    set transparent (val: boolean) {\r\n        this._transparent = val;\r\n        this.material!.overridePipelineStates(val ? enableBlend : {});\r\n    }\r\n    get transparent () {\r\n        return this._transparent;\r\n    }\r\n\r\n    public onLoad () {\r\n        if (!material) {\r\n            material = new Material();\r\n            material.initialize(materialInfo);\r\n            mesh = utils.createMesh(meshInfo);\r\n            vbInfo = mesh.struct.vertexBundles[0].view;\r\n            vbuffer = mesh.data.buffer.slice(vbInfo.offset, vbInfo.offset + vbInfo.length);\r\n        }\r\n        this.material = material;\r\n        this._mesh = mesh;\r\n        super.onLoad();\r\n        this.updateTexture();\r\n        this.transparent = this._transparent;\r\n    }\r\n\r\n    public updateTexture () {\r\n        // update pass\r\n        const pass = this.material && this.material.passes[0];\r\n        const binding = pass && pass.getBinding('mainTexture');\r\n        if (typeof binding !== 'number') { return; }\r\n        const target = this._sprite ? this._sprite : this._texture ? this._texture : builtinResMgr.get<Texture2D>('grey-texture');\r\n        pass!.bindTexture(binding, target.getGFXTexture());\r\n        // update UV (handle atlas)\r\n        const model = this.model && this.model.subModels[0];\r\n        const ia = model && model.inputAssembler;\r\n        if (!ia) { return; }\r\n        let uv = default_uvs;\r\n        if (this._sprite) { this._sprite._calculateUV(); uv = this._sprite.uv; }\r\n\r\n        let offset = 0;\r\n        let format = gfx.Format.UNKNOWN;\r\n        for (const a of ia.attributes) {\r\n            if (a.name === gfx.AttributeName.ATTR_TEX_COORD) { format = a.format; break; }\r\n            offset += gfx.FormatInfos[a.format].size;\r\n        }\r\n        const vb = ia.vertexBuffers[0];\r\n        utils.writeBuffer(new DataView(vbuffer as ArrayBuffer), uv, format, offset, vb.stride);\r\n        vb.update(vbuffer!);\r\n    }\r\n}\r\n"]}